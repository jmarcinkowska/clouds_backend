{"version":3,"sources":["services/StationService.js","components/ListStation.jsx","components/HeaderComponent.jsx","components/CreateStationComponent.jsx","services/TrainService.js","components/ShowTrainComponent.jsx","components/TrainForStationComponent.jsx","App.js","reportWebVitals.js","index.js"],"names":["STATION_API","axios","get","station","post","id","put","delete","ListStation","props","state","stations","addStation","bind","editStation","deleteStation","showTrains","StationService","then","res","setState","filter","this","history","push","getStations","data","className","onClick","style","marginLeft","map","city","name","trains","item","number","Component","HeaderComponent","href","CreateStationComponent","changeCityHandles","event","target","value","changeNameHandles","saveStation","e","preventDefault","createStation","updateStation","match","params","numberOfCarriages","getStationById","console","log","getTitle","placeholder","onChange","cancel","TRAIN_API","ShowTrainComponent","train","TrainService","getTrain","Math","random","changeNumberHandles","JSON","stringify","App","path","exact","component","TrainForStationComponent","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.788870b4.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst STATION_API = \"https://train-station-project.herokuapp.com/\"\r\n\r\nclass StationService {\r\n\r\n    getStations() {\r\n        return axios.get(STATION_API + '/station');\r\n    }\r\n\r\n    createStation(station) {\r\n        return axios.post(STATION_API + '/station', station);\r\n    }\r\n\r\n    getStationById(id) {\r\n        return axios.get(STATION_API + '/station/' + id);\r\n    }\r\n\r\n    updateStation(station, id) {\r\n        return axios.put(STATION_API + '/station/' + id, station);\r\n    }\r\n\r\n    deleteStation(id) {\r\n        return axios.delete(STATION_API + '/station/' + id);\r\n    }\r\n\r\n    getTrainById(id) {\r\n        return axios.get(STATION_API + '/station/trains/' + id);\r\n    }\r\n}\r\n\r\nexport default new StationService();","import React, { Component } from 'react';\r\nimport StationService from '../services/StationService';\r\n\r\nclass ListStation extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            stations: []\r\n        }\r\n\r\n        this.addStation = this.addStation.bind(this);\r\n        this.editStation = this.editStation.bind(this);\r\n        this.deleteStation = this.deleteStation.bind(this);\r\n        this.showTrains = this.showTrains.bind(this);\r\n    }\r\n\r\n    deleteStation(id) {\r\n        StationService.deleteStation(id).then(res => {\r\n            this.setState({ stations: this.state.stations.filter(station => station.id !== id) });\r\n        })\r\n    }\r\n\r\n    editStation(id) {\r\n        this.props.history.push(`/add-station/${id}`);\r\n    }\r\n\r\n    componentDidMount() {\r\n        StationService.getStations().then((res) => {\r\n            this.setState({ stations: res.data });\r\n        })\r\n    }\r\n\r\n    addStation() {\r\n        this.props.history.push('/add-station/_add');\r\n    }\r\n\r\n    showTrains() {\r\n        this.props.history.push('/show-train');\r\n    }\r\n\r\n    showTrainsForStation(id) {\r\n        this.props.history.push(`/trains/${id}`)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2 className=\"text-center\">Lista stacji</h2>\r\n                <div className=\"row\">\r\n                    <button className=\"btn btn-primary\" onClick={this.addStation}>Dodaj stację</button>\r\n                    <button className=\"btn btn-primary\" style={{ marginLeft: \"10px\" }} onClick={this.showTrains}>Pokaż pociągi</button>\r\n                    {/* <button className=\"btn btn-primary\" onClick={this.showTrains}>Pokaż połączenia</button> */}\r\n                </div>\r\n                <div className=\"row\">\r\n                    <table className=\"table table-striped table-bordered\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Miasto</th>\r\n                                <th>Nazwa stacji</th>\r\n                                <th>Pociągi</th>\r\n                                <th>Akcja</th>\r\n                            </tr>\r\n                        </thead>\r\n\r\n                        <tbody>\r\n                            {this.state.stations.map(\r\n                                station =>\r\n                                    <tr key={station.id}>\r\n                                        <td>{station.city}</td>\r\n                                        <td>{station.name}</td>\r\n                                        <td>{station.trains.map(item => item.number)}</td>\r\n                                        {/* <select>\r\n                                            {station.trains.map(train => <option key={train.id} value={train.number}>{train.number}</option>)}\r\n                                        </select> */}\r\n                                        {/* {console.log(station.trains.id)} */}\r\n                                        {/* {console.log(station.name)} */}\r\n                                        <td>\r\n                                            <button onClick={() => this.editStation(station.id)} className=\"btn btn-info\">Modyfikuj</button>\r\n                                            <button style={{ marginLeft: \"10px\" }} onClick={() => this.deleteStation(station.id)} className=\"btn btn-danger\">Usuń</button>\r\n                                            {/* <button style={{ marginLeft: \"10px\" }} onClick={() => this.showTrainsForStation(station.id)} className=\"btn btn-danger\">Zobacz pociągi</button> */}\r\n                                            {/* {console.log(this.state.stations)} */}\r\n\r\n                                        </td>\r\n                                    </tr>\r\n\r\n                            )}\r\n\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ListStation;","import React, { Component } from 'react';\r\n\r\nclass HeaderComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <header>\r\n                    <nav className=\"navbar navbar-expand-md navbar-dark bg-dark\">\r\n                        <div className=\"navbar-brand\" href=\"#home\">Dworzec kolejowy</div>\r\n                    </nav>\r\n                </header>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HeaderComponent;","import React, { Component } from 'react';\r\nimport StationService from '../services/StationService';\r\n\r\nclass CreateStationComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            station: {\r\n                id: this.props.match.params.id,\r\n                city: '',\r\n                name: '',\r\n                trains: [\r\n                    {\r\n                        number: '',\r\n                        numberOfCarriages: ''\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n\r\n        this.changeCityHandles = this.changeCityHandles.bind(this);\r\n        this.changeNameHandles = this.changeNameHandles.bind(this);\r\n        this.saveStation = this.saveStation.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        if (this.state.station.id === '_add') {\r\n            return;\r\n        } else {\r\n            StationService.getStationById(this.state.station.id).then((res) => {\r\n                let station = res.data;\r\n                this.setState({ name: station.name, city: station.city })\r\n            });\r\n        }\r\n        console.log(this.state.station.name + 'dfddddd');\r\n    }\r\n\r\n    changeCityHandles = (event) => {\r\n        this.setState({ city: event.target.value });\r\n    }\r\n\r\n    changeNameHandles = (event) => {\r\n        this.setState({ name: event.target.value });\r\n    }\r\n\r\n    saveStation = (e) => {\r\n        e.preventDefault();\r\n        let station = { city: this.state.city, name: this.state.name }\r\n\r\n        if (this.state.station.id === '_add') {\r\n            StationService.createStation(station).then(res => {\r\n                this.props.history.push('/stations');\r\n            });\r\n        } else {\r\n            StationService.updateStation(station, this.state.station.id).then(res => {\r\n                this.props.history.push('/stations');\r\n            });\r\n        }\r\n    }\r\n\r\n    cancel() {\r\n        this.props.history.push('/stations');\r\n    }\r\n\r\n    getTitle() {\r\n        if (this.state.id === '_add') {\r\n            return <h3 className=\"text-center\">Dodaj stację</h3>\r\n        } else {\r\n            return <h3 className=\"text-center\">Modyfikuj stację</h3>\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n                            {\r\n                                this.getTitle()\r\n                            }\r\n                            <div className=\"card-body\">\r\n                                <form>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Miejscowość</label>\r\n                                        <input placeholder=\"Miejscowość\" name=\"city\" className=\"form-control\" value={this.state.city} onChange={this.changeCityHandles} />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Nazwa stacji</label>\r\n                                        <input placeholder=\"Nazwa stacji\" name=\"name\" className=\"form-control\" value={this.state.name} onChange={this.changeNameHandles} />\r\n                                    </div>\r\n\r\n                                    <button className=\"btn btn-primary\" onClick={this.saveStation}>Zapisz</button>\r\n                                    <button className=\"btn btn-primary\" onClick={this.cancel.bind(this)} style={{ marginLeft: \"10px\" }}>Odrzuć</button>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default CreateStationComponent;","import axios from 'axios';\r\n\r\nconst TRAIN_API = \"https://train-station-project.herokuapp.com/\"\r\n\r\nclass TrainService {\r\n\r\n    getTrain() {\r\n        return axios.get(TRAIN_API + '/train');\r\n    }\r\n\r\n}\r\n\r\nexport default new TrainService();","import React, { Component } from 'react';\r\nimport TrainService from '../services/TrainService';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nclass ShowTrainComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            train: []\r\n        }\r\n\r\n    }\r\n\r\n    editStation(id) {\r\n        this.props.history.push(`/add-station/${id}`);\r\n    }\r\n\r\n    componentDidMount() {\r\n        TrainService.getTrain().then((res) => {\r\n            this.setState({ train: res.data });\r\n        })\r\n    }\r\n\r\n    addStation() {\r\n        this.props.history.push('/add-station/_add');\r\n    }\r\n\r\n    showTrains() {\r\n        this.props.history.push('/show-train');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2 className=\"text-center\">Lista pociągów</h2>\r\n                <div className=\"row\">\r\n                    {/* <button className=\"btn btn-primary\" onClick={this.showTrains}>Dodaj połączenie</button> */}\r\n                </div>\r\n                <div className=\"row\">\r\n                    <table className=\"table table-striped table-bordered\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Numer pociągu</th>\r\n                                <th>Ilość wagonów</th>\r\n                            </tr>\r\n                        </thead>\r\n\r\n                        <tbody>\r\n                            {this.state.train.map(\r\n                                train =>\r\n                                    <tr key={train.id}>\r\n                                        <td key={Math.random()}>{train.number}</td>\r\n                                        <td key={Math.random()}>{train.numberOfCarriages}</td>\r\n                                        {/* <td key={Math.random()}>\r\n                                            <button onClick={() => this.editStation(train.id)} className=\"btn btn-info\">Modyfikuj</button>\r\n                                            <button style={{ marginLeft: \"10px\" }} onClick={() => this.deleteStation(train.id)} className=\"btn btn-danger\">Usuń</button>\r\n                                        </td> */}\r\n                                        {/* <select>  {this.state.station.trains.map(train => { console.log(train); \r\n                                            return <option key={train.id} value={train.number}>{train.number}</option> })}  </select> */}\r\n                                    </tr>\r\n\r\n                            )}\r\n\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ShowTrainComponent;","import React, { Component } from \"react\";\r\n//import StationService from \"../services/StationService\";\r\n\r\nclass CreateStationComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            station: {\r\n                id: \"test\",\r\n                city: \"\",\r\n                name: \"\",\r\n                trains: [\r\n                    {\r\n                        number: \"\",\r\n                        numberOfCarriages: \"\"\r\n                    }\r\n                ]\r\n            }\r\n        };\r\n\r\n        this.changeCityHandles = this.changeCityHandles.bind(this);\r\n        this.changeNameHandles = this.changeNameHandles.bind(this);\r\n        this.saveStation = this.saveStation.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.state.station.id === \"_add\") {\r\n            return;\r\n        } else {\r\n            //  StationService.getStationById(this.state.station.id).then((res) => {\r\n            //    let station = res.data;\r\n            //    this.setState({ ...this.state,\r\n            //     station:{\r\n            //           ...this.state.station,\r\n            //           name: station.name,\r\n            //           city:station.city\r\n            //           }});\r\n            //  });\r\n        }\r\n    }\r\n\r\n    changeCityHandles = (event) => {\r\n        this.setState({\r\n            ...this.state,\r\n            station: {\r\n                ...this.state.station,\r\n                city: event.target.value\r\n            }\r\n        });\r\n    };\r\n\r\n    /*\r\n  \r\n    this.setState({ foo: {\r\n    ...this.state.foo,\r\n    c: 'updated value'\r\n  }}*/\r\n    changeNameHandles = (event) => {\r\n        this.setState({\r\n            ...this.state,\r\n            station: {\r\n                ...this.state.station,\r\n                name: event.target.value\r\n            }\r\n        });\r\n    };\r\n\r\n    changeNumberHandles = (event) => {\r\n        this.setState({\r\n            ...this.state,\r\n            trains: {\r\n                ...this.state.trains,\r\n                number: event.target.value\r\n            }\r\n        });\r\n    };\r\n\r\n    saveStation = (e) => {\r\n        e.preventDefault();\r\n        let station = {\r\n            city: this.state.city,\r\n            name: this.state.name,\r\n            number: this.state.trains.number\r\n        };\r\n\r\n        if (this.state.station.id === \"_add\") {\r\n            //  StationService.createStation(station).then((res) => {\r\n            //    this.props.history.push(\"/stations\");\r\n            //  });\r\n        } else {\r\n            //  StationService.updateStation(station, this.state.station.id).then(\r\n            //    (res) => {\r\n            //      this.props.history.push(\"/stations\");\r\n            //    }\r\n            //  );\r\n        }\r\n    };\r\n\r\n    cancel() {\r\n        this.props.history.push(\"/stations\");\r\n    }\r\n\r\n    getTitle() {\r\n        if (this.state.id === \"_add\") {\r\n            return <h3 className=\"text-center\">Dodaj stację</h3>;\r\n        } else {\r\n            return <h3 className=\"text-center\">Modyfikuj stację</h3>;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n                            {this.getTitle()}\r\n                            <div className=\"card-body\">\r\n                                <form>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Miejscowość</label>\r\n                                        <input\r\n                                            placeholder=\"Miejscowość\"\r\n                                            name=\"city\"\r\n                                            className=\"form-control\"\r\n                                            value={this.state.city}\r\n                                            onChange={this.changeCityHandles}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Nazwa stacji</label>\r\n                                        <input\r\n                                            placeholder=\"Nazwa stacji\"\r\n                                            name=\"name\"\r\n                                            className=\"form-control\"\r\n                                            value={this.state.name}\r\n                                            onChange={this.changeNameHandles}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <label>Pociąg</label>\r\n                                        {/* <input placeholder=\"Nazwa stacji\" name=\"number\" className=\"form-control\" value={this.state.trains.map(t => t.number)} onChange={this.changeNameHandles} /> */}\r\n                                        <input\r\n                                            placeholder=\"Nazwa stacji\"\r\n                                            name=\"number\"\r\n                                            className=\"form-control\"\r\n                                            onChange={this.changeNumberHandles}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <button\r\n                                        className=\"btn btn-primary\"\r\n                                        onClick={this.saveStation}\r\n                                    >\r\n                                        Zapisz\r\n                  </button>\r\n                                    <button\r\n                                        className=\"btn btn-primary\"\r\n                                        onClick={this.cancel.bind(this)}\r\n                                        style={{ marginLeft: \"10px\" }}\r\n                                    >\r\n                                        Odrzuć\r\n                  </button>\r\n                                </form>\r\n                                {JSON.stringify(this.state)}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default CreateStationComponent;\r\n","import './App.css';\nimport { browserHistory, BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport React, { Component } from \"react\";\nimport ListStation from './components/ListStation';\nimport HeaderComponent from './components/HeaderComponent';\nimport CreateStationComponent from './components/CreateStationComponent';\nimport ShowTrainComponent from './components/ShowTrainComponent';\nimport TrainForStationComponent from './components/TrainForStationComponent';\n\n\nclass App extends Component {\n\n\n  render() {\n    return (\n      <div>\n        <Router>\n          <HeaderComponent />\n          <div className=\"container\">\n            <Switch>\n              <Route path=\"/\" exact component={ListStation}></Route>\n              <Route path=\"/stations\" component={ListStation}></Route>\n              <Route path=\"/add-station/:id\" component={CreateStationComponent}></Route>\n              <Route path=\"/show-train\" component={ShowTrainComponent}></Route>\n              <Route path=\"/trains/:id\" component={TrainForStationComponent}></Route>\n              {/* <Route path=\"/update-station/:id\" component={UpdateStationComponent}></Route> */}\n            </Switch>\n          </div>\n          {/* <FooterComponent /> */}\n        </Router>\n      </div >\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}